Id,Title,Category,Diagram,Interaction,Priority,State,Changed By,Description,Justification,Last Modified,Possible Mitigation(s),SDL Phase
41,An adversary can gain access to sensitive data stored in Web App's config files,Tampering,Diagram 1,Web request,High,Not Started,,"An adversary can gain access to the config files. and if sensitive data is stored in it, it would be compromised.",,Generated,"Encrypt sections of Web App's configuration files that contain sensitive data. Refer: <a href=""https://aka.ms/tmtdata#encrypt-data"">https://aka.ms/tmtdata#encrypt-data</a>",Implementation
40,An adversary can gain access to sensitive data by performing SQL injection through Web App,Tampering,Diagram 1,Web request,High,Not Started,,"SQL injection is an attack in which malicious code is inserted into strings that are later passed to an instance of SQL Server for parsing and execution. The primary form of SQL injection consists of direct insertion of code into user-input variables that are concatenated with SQL commands and executed. A less direct attack injects malicious code into strings that are destined for storage in a table or as metadata. When the stored strings are subsequently concatenated into a dynamic SQL command, the malicious code is executed. ",,Generated,"Ensure that type-safe parameters are used in Web Application for data access. Refer: <a href=""https://aka.ms/tmtinputval#typesafe"">https://aka.ms/tmtinputval#typesafe</a>",Implementation
39,An attacker steals messages off the network and replays them in order to steal a user's session,Tampering,Diagram 1,Web request,High,Not Started,,An attacker steals messages off the network and replays them in order to steal a user's session,,Generated,,Implementation
38,An adversary can deface the target web application by injecting malicious code or uploading dangerous files,Tampering,Diagram 1,Web request,High,Not Started,,"Website defacement is an attack on a website where the attacker changes the visual appearance of the site or a webpage. ",,Generated,"Implement Content Security Policy (CSP), and disable inline javascript. Refer: <a href=""https://aka.ms/tmtconfigmgmt#csp-js"">https://aka.ms/tmtconfigmgmt#csp-js</a>  Enable browser's XSS filter. Refer: <a href=""https://aka.ms/tmtconfigmgmt#xss-filter"">https://aka.ms/tmtconfigmgmt#xss-filter</a>  Access third party javascripts from trusted sources only. Refer: <a href=""https://aka.ms/tmtconfigmgmt#js-trusted"">https://aka.ms/tmtconfigmgmt#js-trusted</a>  Enable ValidateRequest attribute on ASP.NET Pages. Refer: <a href=""https://aka.ms/tmtconfigmgmt#validate-aspnet"">https://aka.ms/tmtconfigmgmt#validate-aspnet</a>  Ensure that each page that could contain user controllable content opts out of automatic MIME sniffing . Refer: <a href=""https://aka.ms/tmtinputval#out-sniffing"">https://aka.ms/tmtinputval#out-sniffing</a>  Use locally-hosted latest versions of JavaScript libraries . Refer: <a href=""https://aka.ms/tmtconfigmgmt#local-js"">https://aka.ms/tmtconfigmgmt#local-js</a>  Ensure appropriate controls are in place when accepting files from users. Refer: <a href=""https://aka.ms/tmtinputval#controls-users"">https://aka.ms/tmtinputval#controls-users</a>  Disable automatic MIME sniffing. Refer: <a href=""https://aka.ms/tmtconfigmgmt#mime-sniff"">https://aka.ms/tmtconfigmgmt#mime-sniff</a>  Encode untrusted web output prior to rendering. Refer: <a href=""https://aka.ms/tmtinputval#rendering"">https://aka.ms/tmtinputval#rendering</a>  Perform input validation and filtering on all string type Model properties. Refer: <a href=""https://aka.ms/tmtinputval#typemodel"">https://aka.ms/tmtinputval#typemodel</a>  Ensure that the system has inbuilt defences against misuse. Refer: <a href=""https://aka.ms/tmtauditlog#inbuilt-defenses"">https://aka.ms/tmtauditlog#inbuilt-defenses</a>  Enable HTTP Strict Transport Security (HSTS). Refer: <a href=""https://aka.ms/tmtcommsec#http-hsts"">https://aka.ms/tmtcommsec#http-hsts</a>  Implement input validation on all string type parameters accepted by Controller methods. Refer: <a href=""https://aka.ms/tmtinputval#string-method"">https://aka.ms/tmtinputval#string-method</a>  Avoid using Html.Raw in Razor views. Refer: <a href=""https://aka.ms/tmtinputval#html-razor"">https://aka.ms/tmtinputval#html-razor</a>  Sanitization should be applied on form fields that accept all characters e.g, rich text editor . Refer: <a href=""https://aka.ms/tmtinputval#richtext"">https://aka.ms/tmtinputval#richtext</a>  Do not assign DOM elements to sinks that do not have inbuilt encoding . Refer: <a href=""https://aka.ms/tmtinputval#inbuilt-encode"">https://aka.ms/tmtinputval#inbuilt-encode</a>",Implementation
37,An adversary may spoof User's Browser and gain access to Web Application,Spoofing,Diagram 1,Web request,High,Not Started,,"If proper authentication is not in place, an adversary can spoof a source process or external entity and gain unauthorized access to the Web Application",,Generated,"Consider using a standard authentication mechanism to authenticate to Web Application. Refer: <a href=""https://aka.ms/tmtauthn#standard-authn-web-app"">https://aka.ms/tmtauthn#standard-authn-web-app</a>",Design
36,An adversary can create a fake website and launch phishing attacks,Spoofing,Diagram 1,Web request,High,Not Started,,"Phishing is attempted to obtain sensitive information such as usernames, passwords, and credit card details (and sometimes, indirectly, money), often for malicious reasons, by masquerading as a Web Server which is a trustworthy entity in electronic communication",,Generated,"Verify X.509 certificates used to authenticate SSL, TLS, and DTLS connections. Refer: <a href=""https://aka.ms/tmtcommsec#x509-ssltls"">https://aka.ms/tmtcommsec#x509-ssltls</a>  Ensure that authenticated ASP.NET pages incorporate UI Redressing or clickjacking defences. Refer: <a href=""https://aka.ms/tmtconfigmgmt#ui-defenses"">https://aka.ms/tmtconfigmgmt#ui-defenses</a>  Validate all redirects within the application are closed or done safely. Refer: <a href=""https://aka.ms/tmtinputval#redirect-safe"">https://aka.ms/tmtinputval#redirect-safe</a>",Implementation
35,Attackers can steal user session cookies due to insecure cookie attributes,Spoofing,Diagram 1,Web request,High,Not Started,,"The session cookies is the identifier by which the server knows the identity of current user for each incoming request. If the attacker is able to steal the user token he would be able to access all user data and perform all actions on behalf of user. ",,Generated,"Applications available over HTTPS must use secure cookies. Refer: <a href=""https://aka.ms/tmtsmgmt#https-secure-cookies"">https://aka.ms/tmtsmgmt#https-secure-cookies</a>  All http based application should specify http only for cookie definition. Refer: <a href=""https://aka.ms/tmtsmgmt#cookie-definition"">https://aka.ms/tmtsmgmt#cookie-definition</a>",Implementation
34,An adversary can steal sensitive data like user credentials,Spoofing,Diagram 1,Web request,High,Not Started,,"Attackers can exploit weaknesses in system to steal user credentials. Downstream and upstream components are often accessed by using credentials stored in configuration stores. Attackers may steal the upstream or downstream component credentials. Attackers may steal credentials if, Credentials are stored and sent in clear text, Weak input validation coupled with dynamic sql queries, Password retrieval mechanism are poor,  ",,Generated,"Explicitly disable the autocomplete HTML attribute in sensitive forms and inputs. Refer: <a href=""https://aka.ms/tmtdata#autocomplete-input"">https://aka.ms/tmtdata#autocomplete-input</a>  Perform input validation and filtering on all string type Model properties. Refer: <a href=""https://aka.ms/tmtinputval#typemodel"">https://aka.ms/tmtinputval#typemodel</a>  Validate all redirects within the application are closed or done safely. Refer: <a href=""https://aka.ms/tmtinputval#redirect-safe"">https://aka.ms/tmtinputval#redirect-safe</a>  Enable step up or adaptive authentication. Refer: <a href=""https://aka.ms/tmtauthn#step-up-adaptive-authn"">https://aka.ms/tmtauthn#step-up-adaptive-authn</a>  Implement forgot password functionalities securely. Refer: <a href=""https://aka.ms/tmtauthn#forgot-pword-fxn"">https://aka.ms/tmtauthn#forgot-pword-fxn</a>  Ensure that password and account policy are implemented. Refer: <a href=""https://aka.ms/tmtauthn#pword-account-policy"">https://aka.ms/tmtauthn#pword-account-policy</a>  Implement input validation on all string type parameters accepted by Controller methods. Refer: <a href=""https://aka.ms/tmtinputval#string-method"">https://aka.ms/tmtinputval#string-method</a>",Implementation
33,An adversary can spoof the target web application due to insecure TLS certificate configuration,Spoofing,Diagram 1,Web request,High,Not Started,,Ensure that TLS certificate parameters are configured with correct values,,Generated,"Verify X.509 certificates used to authenticate SSL, TLS, and DTLS connections. Refer: <a href=""https://aka.ms/tmtcommsec#x509-ssltls"">https://aka.ms/tmtcommsec#x509-ssltls</a>",Implementation
32,An adversary can get access to a user's session due to insecure coding practices,Spoofing,Diagram 1,Web request,High,Not Started,,The session cookies is the identifier by which the server knows the identity of current user for each incoming request. If the attacker is able to steal the user token he would be able to access all user data and perform all actions on behalf of user.,,Generated,"Enable ValidateRequest attribute on ASP.NET Pages. Refer: <a href=""https://aka.ms/tmtconfigmgmt#validate-aspnet"">https://aka.ms/tmtconfigmgmt#validate-aspnet</a>  Encode untrusted web output prior to rendering. Refer: <a href=""https://aka.ms/tmtinputval#rendering"">https://aka.ms/tmtinputval#rendering</a>  Avoid using Html.Raw in Razor views. Refer: <a href=""https://aka.ms/tmtinputval#html-razor"">https://aka.ms/tmtinputval#html-razor</a>  Sanitization should be applied on form fields that accept all characters e.g, rich text editor . Refer: <a href=""https://aka.ms/tmtinputval#richtext"">https://aka.ms/tmtinputval#richtext</a>  Do not assign DOM elements to sinks that do not have inbuilt encoding . Refer: <a href=""https://aka.ms/tmtinputval#inbuilt-encode"">https://aka.ms/tmtinputval#inbuilt-encode</a>",Implementation
31,An adversary can get access to a user's session due to improper logout and timeout,Spoofing,Diagram 1,Web request,High,Not Started,,The session cookies is the identifier by which the server knows the identity of current user for each incoming request. If the attacker is able to steal the user token he would be able to access all user data and perform all actions on behalf of user.,,Generated,"Set up session for inactivity lifetime. Refer: <a href=""https://aka.ms/tmtsmgmt#inactivity-lifetime"">https://aka.ms/tmtsmgmt#inactivity-lifetime</a>  Implement proper logout from the application. Refer: <a href=""https://aka.ms/tmtsmgmt#proper-app-logout"">https://aka.ms/tmtsmgmt#proper-app-logout</a>",Implementation
30,Attacker can deny the malicious act and remove the attack foot prints leading to repudiation issues,Repudiation,Diagram 1,Web request,Medium,Not Started,,"Proper logging of all security events and user actions builds traceability in a system and denies any possible repudiation issues. In the absence of proper auditing and logging controls, it would become impossible to implement any accountability in a system",,Generated,"Ensure that auditing and logging is enforced on the application. Refer: <a href=""https://aka.ms/tmtauditlog#auditing"">https://aka.ms/tmtauditlog#auditing</a>  Ensure that log rotation and separation are in place. Refer: <a href=""https://aka.ms/tmtauditlog#log-rotation"">https://aka.ms/tmtauditlog#log-rotation</a>  Ensure that Audit and Log Files have Restricted Access. Refer: <a href=""https://aka.ms/tmtauditlog#log-restricted-access"">https://aka.ms/tmtauditlog#log-restricted-access</a>  Ensure that User Management Events are Logged. Refer: <a href=""https://aka.ms/tmtauditlog#user-management"">https://aka.ms/tmtauditlog#user-management</a>",Implementation
29,An adversary may gain access to sensitive data from uncleared browser cache,Information Disclosure,Diagram 1,Web request,High,Not Started,,An adversary may gain access to sensitive data from uncleared browser cache,,Generated,"Ensure that sensitive content is not cached on the browser. Refer: <a href=""https://aka.ms/tmtdata#cache-browser"">https://aka.ms/tmtdata#cache-browser</a>",Implementation
28,An adversary can gain access to sensitive information through error messages,Information Disclosure,Diagram 1,Web request,High,Not Started,,"An adversary can gain access to sensitive data such as the following, through verbose error messages - Server names  - Connection strings  - Usernames  - Passwords  - SQL procedures  - Details of dynamic SQL failures  - Stack trace and lines of code  - Variables stored in memory  - Drive and folder locations  - Application install points  - Host configuration settings  - Other internal application details ",,Generated,"Do not expose security details in error messages. Refer: <a href=""https://aka.ms/tmtxmgmt#messages"">https://aka.ms/tmtxmgmt#messages</a>  Implement Default error handling page. Refer: <a href=""https://aka.ms/tmtxmgmt#default"">https://aka.ms/tmtxmgmt#default</a>  Set Deployment Method to Retail in IIS. Refer: <a href=""https://aka.ms/tmtxmgmt#deployment"">https://aka.ms/tmtxmgmt#deployment</a>  Exceptions should fail safely. Refer: <a href=""https://aka.ms/tmtxmgmt#fail"">https://aka.ms/tmtxmgmt#fail</a>  ASP.NET applications must disable tracing and debugging prior to deployment. Refer: <a href=""https://aka.ms/tmtconfigmgmt#trace-deploy"">https://aka.ms/tmtconfigmgmt#trace-deploy</a>  Implement controls to prevent username enumeration. Refer: <a href=""https://aka.ms/tmtauthn#controls-username-enum"">https://aka.ms/tmtauthn#controls-username-enum</a>",Implementation
27,An adversary can gain access to sensitive data by sniffing traffic to Web Application,Information Disclosure,Diagram 1,Web request,High,Not Started,,"An adversary may conduct man in the middle attack and downgrade TLS connection to clear text protocol, or forcing browser communication to pass through a proxy server that he controls. This may happen because the application may use mixed content or HTTP Strict Transport Security policy is not ensured.",,Generated,"Applications available over HTTPS must use secure cookies. Refer: <a href=""https://aka.ms/tmtsmgmt#https-secure-cookies"">https://aka.ms/tmtsmgmt#https-secure-cookies</a>  Enable HTTP Strict Transport Security (HSTS). Refer: <a href=""https://aka.ms/tmtcommsec#http-hsts"">https://aka.ms/tmtcommsec#http-hsts</a>",Implementation
26,An adversary can gain access to certain pages or the site as a whole.,Information Disclosure,Diagram 1,Web request,Medium,Not Started,,Robots.txt is often found in your site's root directory and exists to regulate the bots that crawl your site. This is where you can grant or deny permission to all or some specific search engine robots to access certain pages or your site as a whole. The standard for this file was developed in 1994 and is known as the Robots Exclusion Standard or Robots Exclusion Protocol. Detailed info about the robots.txt protocol can be found at robotstxt.org.,,Generated,"Ensure that administrative interfaces are appropriately locked down. Refer: <a href=""https://aka.ms/tmtauthn#admin-interface-lockdown"">https://aka.ms/tmtauthn#admin-interface-lockdown</a>",Implementation
25,An adversary may gain access to unmasked sensitive data such as credit card numbers,Information Disclosure,Diagram 1,Web request,High,Not Started,,An adversary may gain access to unmasked sensitive data such as credit card numbers,,Generated,"Ensure that sensitive data displayed on the user screen is masked. Refer: <a href=""https://aka.ms/tmtdata#data-mask"">https://aka.ms/tmtdata#data-mask</a>",Implementation
24,An adversary may gain access to sensitive data from log files,Information Disclosure,Diagram 1,Web request,High,Not Started,,An adversary may gain access to sensitive data from log files,,Generated,"Ensure that the application does not log sensitive user data. Refer: <a href=""https://aka.ms/tmtauditlog#log-sensitive-data"">https://aka.ms/tmtauditlog#log-sensitive-data</a>  Ensure that Audit and Log Files have Restricted Access. Refer: <a href=""https://aka.ms/tmtauditlog#log-restricted-access"">https://aka.ms/tmtauditlog#log-restricted-access</a>",Implementation
23,An adversary can reverse weakly encrypted or hashed content,Information Disclosure,Diagram 1,Web request,High,Not Started,,An adversary can reverse weakly encrypted or hashed content,,Generated,"Do not expose security details in error messages. Refer: <a href=""https://aka.ms/tmtxmgmt#messages"">https://aka.ms/tmtxmgmt#messages</a> Implement Default error handling page. Refer: <a href=""https://aka.ms/tmtxmgmt#default"">https://aka.ms/tmtxmgmt#default</a>  Set Deployment Method to Retail in IIS. Refer: <a href=""https://aka.ms/tmtxmgmt#deployment"">https://aka.ms/tmtxmgmt#deployment</a>  Use only approved symmetric block ciphers and key lengths. Refer: <a href=""https://aka.ms/tmtcrypto#cipher-length"">https://aka.ms/tmtcrypto#cipher-length</a>  Use approved block cipher modes and initialization vectors for symmetric ciphers. Refer: <a href=""https://aka.ms/tmtcrypto#vector-ciphers"">https://aka.ms/tmtcrypto#vector-ciphers</a>  Use approved asymmetric algorithms, key lengths, and padding. Refer: <a href=""https://aka.ms/tmtcrypto#padding"">https://aka.ms/tmtcrypto#padding</a>  Use approved random number generators. Refer: <a href=""https://aka.ms/tmtcrypto#numgen"">https://aka.ms/tmtcrypto#numgen</a>  Do not use symmetric stream ciphers. Refer: <a href=""https://aka.ms/tmtcrypto#stream-ciphers"">https://aka.ms/tmtcrypto#stream-ciphers</a>  Use approved MAC/HMAC/keyed hash algorithms. Refer: <a href=""https://aka.ms/tmtcrypto#mac-hash"">https://aka.ms/tmtcrypto#mac-hash</a>  Use only approved cryptographic hash functions. Refer: <a href=""https://aka.ms/tmtcrypto#hash-functions"">https://aka.ms/tmtcrypto#hash-functions</a>  Verify X.509 certificates used to authenticate SSL, TLS, and DTLS connections. Refer: <a href=""https://aka.ms/tmtcommsec#x509-ssltls"">https://aka.ms/tmtcommsec#x509-ssltls</a>",Implementation
22,An adversary may bypass critical steps or perform actions on behalf of other users (victims) due to improper validation logic,Elevation of Privileges,Diagram 1,Web request,High,Not Started,,Failure to restrict the privileges and access rights to the application to individuals who require the privileges or access rights may result into unauthorized use of data due to inappropriate rights settings and validation.,,Generated,"Ensure that administrative interfaces are appropriately locked down. Refer: <a href=""https://aka.ms/tmtauthn#admin-interface-lockdown"">https://aka.ms/tmtauthn#admin-interface-lockdown</a>  Enforce sequential step order when processing business logic flows. Refer: <a href=""https://aka.ms/tmtauthz#sequential-logic"">https://aka.ms/tmtauthz#sequential-logic</a>  Ensure that proper authorization is in place and principle of least privileges is followed. Refer: <a href=""https://aka.ms/tmtauthz#principle-least-privilege"">https://aka.ms/tmtauthz#principle-least-privilege</a>  Business logic and resource access authorization decisions should not be based on incoming request parameters. Refer: <a href=""https://aka.ms/tmtauthz#logic-request-parameters"">https://aka.ms/tmtauthz#logic-request-parameters</a>  Ensure that content and resources are not enumerable or accessible via forceful browsing. Refer: <a href=""https://aka.ms/tmtauthz#enumerable-browsing"">https://aka.ms/tmtauthz#enumerable-browsing</a>",Implementation
21,An adversary can perform action on behalf of other user due to lack of controls against cross domain requests,Denial of Service,Diagram 1,Web request,High,Not Started,,Failure to restrict requests originating from third party domains may result in unauthorized actions or access of data,,Generated,"Ensure that authenticated ASP.NET pages incorporate UI Redressing or clickjacking defences. Refer: <a href=""https://aka.ms/tmtconfigmgmt#ui-defenses"">https://aka.ms/tmtconfigmgmt#ui-defenses</a>  Ensure that only trusted origins are allowed if CORS is enabled on ASP.NET Web Applications. Refer: <a href=""https://aka.ms/tmtconfigmgmt#cors-aspnet"">https://aka.ms/tmtconfigmgmt#cors-aspnet</a>  Mitigate against Cross-Site Request Forgery (CSRF) attacks on ASP.NET web pages. Refer: <a href=""https://aka.ms/tmtsmgmt#csrf-asp"">https://aka.ms/tmtsmgmt#csrf-asp</a>",Implementation
42,An adversary can reverse weakly encrypted or hashed content,Information Disclosure,Diagram 1,Database response,High,Not Started,,An adversary can reverse weakly encrypted or hashed content,,Generated,"Do not expose security details in error messages. Refer: <a href=""https://aka.ms/tmtxmgmt#messages"">https://aka.ms/tmtxmgmt#messages</a> Implement Default error handling page. Refer: <a href=""https://aka.ms/tmtxmgmt#default"">https://aka.ms/tmtxmgmt#default</a>  Set Deployment Method to Retail in IIS. Refer: <a href=""https://aka.ms/tmtxmgmt#deployment"">https://aka.ms/tmtxmgmt#deployment</a>  Use only approved symmetric block ciphers and key lengths. Refer: <a href=""https://aka.ms/tmtcrypto#cipher-length"">https://aka.ms/tmtcrypto#cipher-length</a>  Use approved block cipher modes and initialization vectors for symmetric ciphers. Refer: <a href=""https://aka.ms/tmtcrypto#vector-ciphers"">https://aka.ms/tmtcrypto#vector-ciphers</a>  Use approved asymmetric algorithms, key lengths, and padding. Refer: <a href=""https://aka.ms/tmtcrypto#padding"">https://aka.ms/tmtcrypto#padding</a>  Use approved random number generators. Refer: <a href=""https://aka.ms/tmtcrypto#numgen"">https://aka.ms/tmtcrypto#numgen</a>  Do not use symmetric stream ciphers. Refer: <a href=""https://aka.ms/tmtcrypto#stream-ciphers"">https://aka.ms/tmtcrypto#stream-ciphers</a>  Use approved MAC/HMAC/keyed hash algorithms. Refer: <a href=""https://aka.ms/tmtcrypto#mac-hash"">https://aka.ms/tmtcrypto#mac-hash</a>  Use only approved cryptographic hash functions. Refer: <a href=""https://aka.ms/tmtcrypto#hash-functions"">https://aka.ms/tmtcrypto#hash-functions</a>  Verify X.509 certificates used to authenticate SSL, TLS, and DTLS connections. Refer: <a href=""https://aka.ms/tmtcommsec#x509-ssltls"">https://aka.ms/tmtcommsec#x509-ssltls</a>",Implementation
43,An adversary may gain access to sensitive data from log files,Information Disclosure,Diagram 1,Database response,High,Not Started,,An adversary may gain access to sensitive data from log files,,Generated,"Ensure that the application does not log sensitive user data. Refer: <a href=""https://aka.ms/tmtauditlog#log-sensitive-data"">https://aka.ms/tmtauditlog#log-sensitive-data</a>  Ensure that Audit and Log Files have Restricted Access. Refer: <a href=""https://aka.ms/tmtauditlog#log-restricted-access"">https://aka.ms/tmtauditlog#log-restricted-access</a>",Implementation
44,An adversary can gain access to sensitive information through error messages,Information Disclosure,Diagram 1,Database response,High,Not Started,,"An adversary can gain access to sensitive data such as the following, through verbose error messages - Server names  - Connection strings  - Usernames  - Passwords  - SQL procedures  - Details of dynamic SQL failures  - Stack trace and lines of code  - Variables stored in memory  - Drive and folder locations  - Application install points  - Host configuration settings  - Other internal application details ",,Generated,"Do not expose security details in error messages. Refer: <a href=""https://aka.ms/tmtxmgmt#messages"">https://aka.ms/tmtxmgmt#messages</a>  Implement Default error handling page. Refer: <a href=""https://aka.ms/tmtxmgmt#default"">https://aka.ms/tmtxmgmt#default</a>  Set Deployment Method to Retail in IIS. Refer: <a href=""https://aka.ms/tmtxmgmt#deployment"">https://aka.ms/tmtxmgmt#deployment</a>  Exceptions should fail safely. Refer: <a href=""https://aka.ms/tmtxmgmt#fail"">https://aka.ms/tmtxmgmt#fail</a>  ASP.NET applications must disable tracing and debugging prior to deployment. Refer: <a href=""https://aka.ms/tmtconfigmgmt#trace-deploy"">https://aka.ms/tmtconfigmgmt#trace-deploy</a>  Implement controls to prevent username enumeration. Refer: <a href=""https://aka.ms/tmtauthn#controls-username-enum"">https://aka.ms/tmtauthn#controls-username-enum</a>",Implementation
45,Attacker can deny the malicious act and remove the attack foot prints leading to repudiation issues,Repudiation,Diagram 1,Database response,Medium,Not Started,,"Proper logging of all security events and user actions builds traceability in a system and denies any possible repudiation issues. In the absence of proper auditing and logging controls, it would become impossible to implement any accountability in a system",,Generated,"Ensure that auditing and logging is enforced on the application. Refer: <a href=""https://aka.ms/tmtauditlog#auditing"">https://aka.ms/tmtauditlog#auditing</a>  Ensure that log rotation and separation are in place. Refer: <a href=""https://aka.ms/tmtauditlog#log-rotation"">https://aka.ms/tmtauditlog#log-rotation</a>  Ensure that Audit and Log Files have Restricted Access. Refer: <a href=""https://aka.ms/tmtauditlog#log-restricted-access"">https://aka.ms/tmtauditlog#log-restricted-access</a>  Ensure that User Management Events are Logged. Refer: <a href=""https://aka.ms/tmtauditlog#user-management"">https://aka.ms/tmtauditlog#user-management</a>",Implementation
46,An adversary can spoof the target web application due to insecure TLS certificate configuration,Spoofing,Diagram 1,Database response,High,Not Started,,Ensure that TLS certificate parameters are configured with correct values,,Generated,"Verify X.509 certificates used to authenticate SSL, TLS, and DTLS connections. Refer: <a href=""https://aka.ms/tmtcommsec#x509-ssltls"">https://aka.ms/tmtcommsec#x509-ssltls</a>",Implementation
47,An adversary can steal sensitive data like user credentials,Spoofing,Diagram 1,Database response,High,Not Started,,"Attackers can exploit weaknesses in system to steal user credentials. Downstream and upstream components are often accessed by using credentials stored in configuration stores. Attackers may steal the upstream or downstream component credentials. Attackers may steal credentials if, Credentials are stored and sent in clear text, Weak input validation coupled with dynamic sql queries, Password retrieval mechanism are poor,  ",,Generated,"Explicitly disable the autocomplete HTML attribute in sensitive forms and inputs. Refer: <a href=""https://aka.ms/tmtdata#autocomplete-input"">https://aka.ms/tmtdata#autocomplete-input</a>  Perform input validation and filtering on all string type Model properties. Refer: <a href=""https://aka.ms/tmtinputval#typemodel"">https://aka.ms/tmtinputval#typemodel</a>  Validate all redirects within the application are closed or done safely. Refer: <a href=""https://aka.ms/tmtinputval#redirect-safe"">https://aka.ms/tmtinputval#redirect-safe</a>  Enable step up or adaptive authentication. Refer: <a href=""https://aka.ms/tmtauthn#step-up-adaptive-authn"">https://aka.ms/tmtauthn#step-up-adaptive-authn</a>  Implement forgot password functionalities securely. Refer: <a href=""https://aka.ms/tmtauthn#forgot-pword-fxn"">https://aka.ms/tmtauthn#forgot-pword-fxn</a>  Ensure that password and account policy are implemented. Refer: <a href=""https://aka.ms/tmtauthn#pword-account-policy"">https://aka.ms/tmtauthn#pword-account-policy</a>  Implement input validation on all string type parameters accepted by Controller methods. Refer: <a href=""https://aka.ms/tmtinputval#string-method"">https://aka.ms/tmtinputval#string-method</a>",Implementation
48,An adversary can create a fake website and launch phishing attacks,Spoofing,Diagram 1,Database response,High,Not Started,,"Phishing is attempted to obtain sensitive information such as usernames, passwords, and credit card details (and sometimes, indirectly, money), often for malicious reasons, by masquerading as a Web Server which is a trustworthy entity in electronic communication",,Generated,"Verify X.509 certificates used to authenticate SSL, TLS, and DTLS connections. Refer: <a href=""https://aka.ms/tmtcommsec#x509-ssltls"">https://aka.ms/tmtcommsec#x509-ssltls</a>  Ensure that authenticated ASP.NET pages incorporate UI Redressing or clickjacking defences. Refer: <a href=""https://aka.ms/tmtconfigmgmt#ui-defenses"">https://aka.ms/tmtconfigmgmt#ui-defenses</a>  Validate all redirects within the application are closed or done safely. Refer: <a href=""https://aka.ms/tmtinputval#redirect-safe"">https://aka.ms/tmtinputval#redirect-safe</a>",Implementation
49,An adversary may spoof Database and gain access to Web Application,Spoofing,Diagram 1,Database response,High,Not Started,,"If proper authentication is not in place, an adversary can spoof a source process or external entity and gain unauthorized access to the Web Application",,Generated,"Consider using a standard authentication mechanism to authenticate to Web Application. Refer: <a href=""https://aka.ms/tmtauthn#standard-authn-web-app"">https://aka.ms/tmtauthn#standard-authn-web-app</a>",Design
50,An adversary can gain access to sensitive data by performing SQL injection through Web App,Tampering,Diagram 1,Database response,High,Not Started,,"SQL injection is an attack in which malicious code is inserted into strings that are later passed to an instance of SQL Server for parsing and execution. The primary form of SQL injection consists of direct insertion of code into user-input variables that are concatenated with SQL commands and executed. A less direct attack injects malicious code into strings that are destined for storage in a table or as metadata. When the stored strings are subsequently concatenated into a dynamic SQL command, the malicious code is executed. ",,Generated,"Ensure that type-safe parameters are used in Web Application for data access. Refer: <a href=""https://aka.ms/tmtinputval#typesafe"">https://aka.ms/tmtinputval#typesafe</a>",Implementation
51,An adversary can gain access to sensitive data stored in Web App's config files,Tampering,Diagram 1,Database response,High,Not Started,,"An adversary can gain access to the config files. and if sensitive data is stored in it, it would be compromised.",,Generated,"Encrypt sections of Web App's configuration files that contain sensitive data. Refer: <a href=""https://aka.ms/tmtdata#encrypt-data"">https://aka.ms/tmtdata#encrypt-data</a>",Implementation
52,An adversary can gain unauthorized access to Azure SQL database due to weak account policy,Elevation of Privileges,Diagram 1,Database request,High,Not Started,,"Due to poorly configured account policies, adversary can launch brute force attacks on Database ",,Generated,"When possible use Azure Active Directory Authentication for connecting to SQL Database. Refer: <a href=""https://aka.ms/tmt-th10a"">https://aka.ms/tmt-th10a</a> Ensure that least-privileged accounts are used to connect to Database server. Refer: <a href=""https://aka.ms/tmt-th10b"">https://aka.ms/tmt-th10b</a> and <a href=""https://aka.ms/tmt-th10c"">https://aka.ms/tmt-th10c</a>",Implementation
53,An adversary can gain unauthorized access to Azure SQL DB instances due to weak network security configuration.,Elevation of Privileges,Diagram 1,Database request,High,Not Started,,An adversary can gain unauthorized access to Azure SQL DB instances due to weak network security configuration.,,Generated,"Restrict access to Azure SQL Database instances by configuring server-level and database-level firewall rules to permit connections from selected networks (e.g. a virtual network or a custom set of IP addresses) where possible. Refer:<a href=""https://aka.ms/tmt-th143"">https://aka.ms/tmt-th143</a>",Implementation
54,An adversary can read confidential data due to weak connection string configuration,Information Disclosure,Diagram 1,Database request,High,Not Started,,An adversary can read confidential data due to weak connection string configuration.,,Generated,"Clients connecting to an Azure SQL Database instance using a connection string should ensure encrypt=true and trustservercertificate=false are set. This configuration ensures that connections are encrypted only if there is a verifiable server certificate (otherwise the connection attempt fails). This helps protect against Man-In-The-Middle attacks. Refer: <a href=""https://aka.ms/tmt-th144"">https://aka.ms/tmt-th144</a>",Implementation
55,An adversary having access to the storage container (e.g. physical access to the storage media) may be able to read sensitive data,Information Disclosure,Diagram 1,Database request,High,Not Started,,An adversary having access to the storage container (e.g. physical access to the storage media) may be able to read sensitive data.,,Generated,"Enable Transparent Data Encryption (TDE) on Azure SQL Database instances to have data encrypted at rest. Refer:<a href=""https://aka.ms/tmt-th145a"">https://aka.ms/tmt-th145a</a>. Use the Always Encrypted feature to allow client applications to encrypt sensitive data before it is sent to the Azure SQL Database. Refer: <a href=""https://aka.ms/tmt-th145b"">https://aka.ms/tmt-th145b</a> ",Implementation
56,A compromised identity may permit more privileges than intended to an adversary due to weak permission and role assignments,Elevation of Privileges,Diagram 1,Database request,High,Not Started,,A compromised identity may permit more privileges than intended to an adversary due to weak permission and role assignments.,,Generated,"It is recommended to review permission and role assignments to ensure the users are granted the least privileges necessary. Refer: <a href=""https://aka.ms/tmt-th146"">https://aka.ms/tmt-th146</a>",Implementation
57,An adversary can deny actions performed on Database due to a lack of auditing,Repudiation,Diagram 1,Database request,Medium,Not Started,,An adversary can deny actions performed on Database due to a lack of auditing.,,Generated,"Enable auditing on Azure SQL Database instances to track and log database events. After configuring and customizing the audited events, enable threat detection to receive alerts on anomalous database activities indicating potential security threats. Refer: <a href=""https://aka.ms/tmt-th147"">https://aka.ms/tmt-th147</a>",Design
58,"An adversary can gain long term, persistent access to an Azure SQL DB instance through the compromise of local user account password(s)",Elevation of Privileges,Diagram 1,Database request,High,Not Started,,"An adversary can gain long term, persistent access to an Azure SQL DB instance through the compromise of local user account password(s).",,Generated,"It is recommended to rotate user account passwords (e.g. those used in connection strings) regularly, in accordance with your organization's policies. Store secrets in a secret storage solution (e.g. Azure Key Vault).",Implementation
59,An adversary may abuse weak Database configuration,Elevation of Privileges,Diagram 1,Database request,High,Not Started,,An adversary may abuse weak Database configuration.,,Generated,"Enable SQL Vulnerability Assessment to gain visibility into the security posture of your Azure SQL Database instances. Acting on the assessment results help reduce attack surface and enhance your database security. Refer: <a href=""https://aka.ms/tmt-th149"">https://aka.ms/tmt-th149</a>",Implementation
80,An adversary can perform action on behalf of other user due to lack of controls against cross domain requests,Denial of Service,Database request,Web request,High,Not Started,,Failure to restrict requests originating from third party domains may result in unauthorized actions or access of data,,Generated,"Ensure that authenticated ASP.NET pages incorporate UI Redressing or clickjacking defences. Refer: <a href=""https://aka.ms/tmtconfigmgmt#ui-defenses"">https://aka.ms/tmtconfigmgmt#ui-defenses</a>  Ensure that only trusted origins are allowed if CORS is enabled on ASP.NET Web Applications. Refer: <a href=""https://aka.ms/tmtconfigmgmt#cors-aspnet"">https://aka.ms/tmtconfigmgmt#cors-aspnet</a>  Mitigate against Cross-Site Request Forgery (CSRF) attacks on ASP.NET web pages. Refer: <a href=""https://aka.ms/tmtsmgmt#csrf-asp"">https://aka.ms/tmtsmgmt#csrf-asp</a>",Implementation
81,An adversary may bypass critical steps or perform actions on behalf of other users (victims) due to improper validation logic,Elevation of Privileges,Database request,Web request,High,Not Started,,Failure to restrict the privileges and access rights to the application to individuals who require the privileges or access rights may result into unauthorized use of data due to inappropriate rights settings and validation.,,Generated,"Ensure that administrative interfaces are appropriately locked down. Refer: <a href=""https://aka.ms/tmtauthn#admin-interface-lockdown"">https://aka.ms/tmtauthn#admin-interface-lockdown</a>  Enforce sequential step order when processing business logic flows. Refer: <a href=""https://aka.ms/tmtauthz#sequential-logic"">https://aka.ms/tmtauthz#sequential-logic</a>  Ensure that proper authorization is in place and principle of least privileges is followed. Refer: <a href=""https://aka.ms/tmtauthz#principle-least-privilege"">https://aka.ms/tmtauthz#principle-least-privilege</a>  Business logic and resource access authorization decisions should not be based on incoming request parameters. Refer: <a href=""https://aka.ms/tmtauthz#logic-request-parameters"">https://aka.ms/tmtauthz#logic-request-parameters</a>  Ensure that content and resources are not enumerable or accessible via forceful browsing. Refer: <a href=""https://aka.ms/tmtauthz#enumerable-browsing"">https://aka.ms/tmtauthz#enumerable-browsing</a>",Implementation
82,An adversary can reverse weakly encrypted or hashed content,Information Disclosure,Database request,Web request,High,Not Started,,An adversary can reverse weakly encrypted or hashed content,,Generated,"Do not expose security details in error messages. Refer: <a href=""https://aka.ms/tmtxmgmt#messages"">https://aka.ms/tmtxmgmt#messages</a> Implement Default error handling page. Refer: <a href=""https://aka.ms/tmtxmgmt#default"">https://aka.ms/tmtxmgmt#default</a>  Set Deployment Method to Retail in IIS. Refer: <a href=""https://aka.ms/tmtxmgmt#deployment"">https://aka.ms/tmtxmgmt#deployment</a>  Use only approved symmetric block ciphers and key lengths. Refer: <a href=""https://aka.ms/tmtcrypto#cipher-length"">https://aka.ms/tmtcrypto#cipher-length</a>  Use approved block cipher modes and initialization vectors for symmetric ciphers. Refer: <a href=""https://aka.ms/tmtcrypto#vector-ciphers"">https://aka.ms/tmtcrypto#vector-ciphers</a>  Use approved asymmetric algorithms, key lengths, and padding. Refer: <a href=""https://aka.ms/tmtcrypto#padding"">https://aka.ms/tmtcrypto#padding</a>  Use approved random number generators. Refer: <a href=""https://aka.ms/tmtcrypto#numgen"">https://aka.ms/tmtcrypto#numgen</a>  Do not use symmetric stream ciphers. Refer: <a href=""https://aka.ms/tmtcrypto#stream-ciphers"">https://aka.ms/tmtcrypto#stream-ciphers</a>  Use approved MAC/HMAC/keyed hash algorithms. Refer: <a href=""https://aka.ms/tmtcrypto#mac-hash"">https://aka.ms/tmtcrypto#mac-hash</a>  Use only approved cryptographic hash functions. Refer: <a href=""https://aka.ms/tmtcrypto#hash-functions"">https://aka.ms/tmtcrypto#hash-functions</a>  Verify X.509 certificates used to authenticate SSL, TLS, and DTLS connections. Refer: <a href=""https://aka.ms/tmtcommsec#x509-ssltls"">https://aka.ms/tmtcommsec#x509-ssltls</a>",Implementation
83,An adversary may gain access to sensitive data from log files,Information Disclosure,Database request,Web request,High,Not Started,,An adversary may gain access to sensitive data from log files,,Generated,"Ensure that the application does not log sensitive user data. Refer: <a href=""https://aka.ms/tmtauditlog#log-sensitive-data"">https://aka.ms/tmtauditlog#log-sensitive-data</a>  Ensure that Audit and Log Files have Restricted Access. Refer: <a href=""https://aka.ms/tmtauditlog#log-restricted-access"">https://aka.ms/tmtauditlog#log-restricted-access</a>",Implementation
84,An adversary may gain access to unmasked sensitive data such as credit card numbers,Information Disclosure,Database request,Web request,High,Not Started,,An adversary may gain access to unmasked sensitive data such as credit card numbers,,Generated,"Ensure that sensitive data displayed on the user screen is masked. Refer: <a href=""https://aka.ms/tmtdata#data-mask"">https://aka.ms/tmtdata#data-mask</a>",Implementation
85,An adversary can gain access to certain pages or the site as a whole.,Information Disclosure,Database request,Web request,Medium,Not Started,,Robots.txt is often found in your site's root directory and exists to regulate the bots that crawl your site. This is where you can grant or deny permission to all or some specific search engine robots to access certain pages or your site as a whole. The standard for this file was developed in 1994 and is known as the Robots Exclusion Standard or Robots Exclusion Protocol. Detailed info about the robots.txt protocol can be found at robotstxt.org.,,Generated,"Ensure that administrative interfaces are appropriately locked down. Refer: <a href=""https://aka.ms/tmtauthn#admin-interface-lockdown"">https://aka.ms/tmtauthn#admin-interface-lockdown</a>",Implementation
86,An adversary can gain access to sensitive data by sniffing traffic to Web Application,Information Disclosure,Database request,Web request,High,Not Started,,"An adversary may conduct man in the middle attack and downgrade TLS connection to clear text protocol, or forcing browser communication to pass through a proxy server that he controls. This may happen because the application may use mixed content or HTTP Strict Transport Security policy is not ensured.",,Generated,"Applications available over HTTPS must use secure cookies. Refer: <a href=""https://aka.ms/tmtsmgmt#https-secure-cookies"">https://aka.ms/tmtsmgmt#https-secure-cookies</a>  Enable HTTP Strict Transport Security (HSTS). Refer: <a href=""https://aka.ms/tmtcommsec#http-hsts"">https://aka.ms/tmtcommsec#http-hsts</a>",Implementation
87,An adversary can gain access to sensitive information through error messages,Information Disclosure,Database request,Web request,High,Not Started,,"An adversary can gain access to sensitive data such as the following, through verbose error messages - Server names  - Connection strings  - Usernames  - Passwords  - SQL procedures  - Details of dynamic SQL failures  - Stack trace and lines of code  - Variables stored in memory  - Drive and folder locations  - Application install points  - Host configuration settings  - Other internal application details ",,Generated,"Do not expose security details in error messages. Refer: <a href=""https://aka.ms/tmtxmgmt#messages"">https://aka.ms/tmtxmgmt#messages</a>  Implement Default error handling page. Refer: <a href=""https://aka.ms/tmtxmgmt#default"">https://aka.ms/tmtxmgmt#default</a>  Set Deployment Method to Retail in IIS. Refer: <a href=""https://aka.ms/tmtxmgmt#deployment"">https://aka.ms/tmtxmgmt#deployment</a>  Exceptions should fail safely. Refer: <a href=""https://aka.ms/tmtxmgmt#fail"">https://aka.ms/tmtxmgmt#fail</a>  ASP.NET applications must disable tracing and debugging prior to deployment. Refer: <a href=""https://aka.ms/tmtconfigmgmt#trace-deploy"">https://aka.ms/tmtconfigmgmt#trace-deploy</a>  Implement controls to prevent username enumeration. Refer: <a href=""https://aka.ms/tmtauthn#controls-username-enum"">https://aka.ms/tmtauthn#controls-username-enum</a>",Implementation
88,An adversary may gain access to sensitive data from uncleared browser cache,Information Disclosure,Database request,Web request,High,Not Started,,An adversary may gain access to sensitive data from uncleared browser cache,,Generated,"Ensure that sensitive content is not cached on the browser. Refer: <a href=""https://aka.ms/tmtdata#cache-browser"">https://aka.ms/tmtdata#cache-browser</a>",Implementation
89,Attacker can deny the malicious act and remove the attack foot prints leading to repudiation issues,Repudiation,Database request,Web request,Medium,Not Started,,"Proper logging of all security events and user actions builds traceability in a system and denies any possible repudiation issues. In the absence of proper auditing and logging controls, it would become impossible to implement any accountability in a system",,Generated,"Ensure that auditing and logging is enforced on the application. Refer: <a href=""https://aka.ms/tmtauditlog#auditing"">https://aka.ms/tmtauditlog#auditing</a>  Ensure that log rotation and separation are in place. Refer: <a href=""https://aka.ms/tmtauditlog#log-rotation"">https://aka.ms/tmtauditlog#log-rotation</a>  Ensure that Audit and Log Files have Restricted Access. Refer: <a href=""https://aka.ms/tmtauditlog#log-restricted-access"">https://aka.ms/tmtauditlog#log-restricted-access</a>  Ensure that User Management Events are Logged. Refer: <a href=""https://aka.ms/tmtauditlog#user-management"">https://aka.ms/tmtauditlog#user-management</a>",Implementation
90,An adversary can get access to a user's session due to improper logout and timeout,Spoofing,Database request,Web request,High,Not Started,,The session cookies is the identifier by which the server knows the identity of current user for each incoming request. If the attacker is able to steal the user token he would be able to access all user data and perform all actions on behalf of user.,,Generated,"Set up session for inactivity lifetime. Refer: <a href=""https://aka.ms/tmtsmgmt#inactivity-lifetime"">https://aka.ms/tmtsmgmt#inactivity-lifetime</a>  Implement proper logout from the application. Refer: <a href=""https://aka.ms/tmtsmgmt#proper-app-logout"">https://aka.ms/tmtsmgmt#proper-app-logout</a>",Implementation
91,An adversary can get access to a user's session due to insecure coding practices,Spoofing,Database request,Web request,High,Not Started,,The session cookies is the identifier by which the server knows the identity of current user for each incoming request. If the attacker is able to steal the user token he would be able to access all user data and perform all actions on behalf of user.,,Generated,"Enable ValidateRequest attribute on ASP.NET Pages. Refer: <a href=""https://aka.ms/tmtconfigmgmt#validate-aspnet"">https://aka.ms/tmtconfigmgmt#validate-aspnet</a>  Encode untrusted web output prior to rendering. Refer: <a href=""https://aka.ms/tmtinputval#rendering"">https://aka.ms/tmtinputval#rendering</a>  Avoid using Html.Raw in Razor views. Refer: <a href=""https://aka.ms/tmtinputval#html-razor"">https://aka.ms/tmtinputval#html-razor</a>  Sanitization should be applied on form fields that accept all characters e.g, rich text editor . Refer: <a href=""https://aka.ms/tmtinputval#richtext"">https://aka.ms/tmtinputval#richtext</a>  Do not assign DOM elements to sinks that do not have inbuilt encoding . Refer: <a href=""https://aka.ms/tmtinputval#inbuilt-encode"">https://aka.ms/tmtinputval#inbuilt-encode</a>",Implementation
92,An adversary can spoof the target web application due to insecure TLS certificate configuration,Spoofing,Database request,Web request,High,Not Started,,Ensure that TLS certificate parameters are configured with correct values,,Generated,"Verify X.509 certificates used to authenticate SSL, TLS, and DTLS connections. Refer: <a href=""https://aka.ms/tmtcommsec#x509-ssltls"">https://aka.ms/tmtcommsec#x509-ssltls</a>",Implementation
93,An adversary can steal sensitive data like user credentials,Spoofing,Database request,Web request,High,Not Started,,"Attackers can exploit weaknesses in system to steal user credentials. Downstream and upstream components are often accessed by using credentials stored in configuration stores. Attackers may steal the upstream or downstream component credentials. Attackers may steal credentials if, Credentials are stored and sent in clear text, Weak input validation coupled with dynamic sql queries, Password retrieval mechanism are poor,  ",,Generated,"Explicitly disable the autocomplete HTML attribute in sensitive forms and inputs. Refer: <a href=""https://aka.ms/tmtdata#autocomplete-input"">https://aka.ms/tmtdata#autocomplete-input</a>  Perform input validation and filtering on all string type Model properties. Refer: <a href=""https://aka.ms/tmtinputval#typemodel"">https://aka.ms/tmtinputval#typemodel</a>  Validate all redirects within the application are closed or done safely. Refer: <a href=""https://aka.ms/tmtinputval#redirect-safe"">https://aka.ms/tmtinputval#redirect-safe</a>  Enable step up or adaptive authentication. Refer: <a href=""https://aka.ms/tmtauthn#step-up-adaptive-authn"">https://aka.ms/tmtauthn#step-up-adaptive-authn</a>  Implement forgot password functionalities securely. Refer: <a href=""https://aka.ms/tmtauthn#forgot-pword-fxn"">https://aka.ms/tmtauthn#forgot-pword-fxn</a>  Ensure that password and account policy are implemented. Refer: <a href=""https://aka.ms/tmtauthn#pword-account-policy"">https://aka.ms/tmtauthn#pword-account-policy</a>  Implement input validation on all string type parameters accepted by Controller methods. Refer: <a href=""https://aka.ms/tmtinputval#string-method"">https://aka.ms/tmtinputval#string-method</a>",Implementation
94,Attackers can steal user session cookies due to insecure cookie attributes,Spoofing,Database request,Web request,High,Not Started,,"The session cookies is the identifier by which the server knows the identity of current user for each incoming request. If the attacker is able to steal the user token he would be able to access all user data and perform all actions on behalf of user. ",,Generated,"Applications available over HTTPS must use secure cookies. Refer: <a href=""https://aka.ms/tmtsmgmt#https-secure-cookies"">https://aka.ms/tmtsmgmt#https-secure-cookies</a>  All http based application should specify http only for cookie definition. Refer: <a href=""https://aka.ms/tmtsmgmt#cookie-definition"">https://aka.ms/tmtsmgmt#cookie-definition</a>",Implementation
95,An adversary can create a fake website and launch phishing attacks,Spoofing,Database request,Web request,High,Not Started,,"Phishing is attempted to obtain sensitive information such as usernames, passwords, and credit card details (and sometimes, indirectly, money), often for malicious reasons, by masquerading as a Web Server which is a trustworthy entity in electronic communication",,Generated,"Verify X.509 certificates used to authenticate SSL, TLS, and DTLS connections. Refer: <a href=""https://aka.ms/tmtcommsec#x509-ssltls"">https://aka.ms/tmtcommsec#x509-ssltls</a>  Ensure that authenticated ASP.NET pages incorporate UI Redressing or clickjacking defences. Refer: <a href=""https://aka.ms/tmtconfigmgmt#ui-defenses"">https://aka.ms/tmtconfigmgmt#ui-defenses</a>  Validate all redirects within the application are closed or done safely. Refer: <a href=""https://aka.ms/tmtinputval#redirect-safe"">https://aka.ms/tmtinputval#redirect-safe</a>",Implementation
96,An adversary may spoof Developer's Browser and gain access to Web Application,Spoofing,Database request,Web request,High,Not Started,,"If proper authentication is not in place, an adversary can spoof a source process or external entity and gain unauthorized access to the Web Application",,Generated,"Consider using a standard authentication mechanism to authenticate to Web Application. Refer: <a href=""https://aka.ms/tmtauthn#standard-authn-web-app"">https://aka.ms/tmtauthn#standard-authn-web-app</a>",Design
97,An adversary can deface the target web application by injecting malicious code or uploading dangerous files,Tampering,Database request,Web request,High,Not Started,,"Website defacement is an attack on a website where the attacker changes the visual appearance of the site or a webpage. ",,Generated,"Implement Content Security Policy (CSP), and disable inline javascript. Refer: <a href=""https://aka.ms/tmtconfigmgmt#csp-js"">https://aka.ms/tmtconfigmgmt#csp-js</a>  Enable browser's XSS filter. Refer: <a href=""https://aka.ms/tmtconfigmgmt#xss-filter"">https://aka.ms/tmtconfigmgmt#xss-filter</a>  Access third party javascripts from trusted sources only. Refer: <a href=""https://aka.ms/tmtconfigmgmt#js-trusted"">https://aka.ms/tmtconfigmgmt#js-trusted</a>  Enable ValidateRequest attribute on ASP.NET Pages. Refer: <a href=""https://aka.ms/tmtconfigmgmt#validate-aspnet"">https://aka.ms/tmtconfigmgmt#validate-aspnet</a>  Ensure that each page that could contain user controllable content opts out of automatic MIME sniffing . Refer: <a href=""https://aka.ms/tmtinputval#out-sniffing"">https://aka.ms/tmtinputval#out-sniffing</a>  Use locally-hosted latest versions of JavaScript libraries . Refer: <a href=""https://aka.ms/tmtconfigmgmt#local-js"">https://aka.ms/tmtconfigmgmt#local-js</a>  Ensure appropriate controls are in place when accepting files from users. Refer: <a href=""https://aka.ms/tmtinputval#controls-users"">https://aka.ms/tmtinputval#controls-users</a>  Disable automatic MIME sniffing. Refer: <a href=""https://aka.ms/tmtconfigmgmt#mime-sniff"">https://aka.ms/tmtconfigmgmt#mime-sniff</a>  Encode untrusted web output prior to rendering. Refer: <a href=""https://aka.ms/tmtinputval#rendering"">https://aka.ms/tmtinputval#rendering</a>  Perform input validation and filtering on all string type Model properties. Refer: <a href=""https://aka.ms/tmtinputval#typemodel"">https://aka.ms/tmtinputval#typemodel</a>  Ensure that the system has inbuilt defences against misuse. Refer: <a href=""https://aka.ms/tmtauditlog#inbuilt-defenses"">https://aka.ms/tmtauditlog#inbuilt-defenses</a>  Enable HTTP Strict Transport Security (HSTS). Refer: <a href=""https://aka.ms/tmtcommsec#http-hsts"">https://aka.ms/tmtcommsec#http-hsts</a>  Implement input validation on all string type parameters accepted by Controller methods. Refer: <a href=""https://aka.ms/tmtinputval#string-method"">https://aka.ms/tmtinputval#string-method</a>  Avoid using Html.Raw in Razor views. Refer: <a href=""https://aka.ms/tmtinputval#html-razor"">https://aka.ms/tmtinputval#html-razor</a>  Sanitization should be applied on form fields that accept all characters e.g, rich text editor . Refer: <a href=""https://aka.ms/tmtinputval#richtext"">https://aka.ms/tmtinputval#richtext</a>  Do not assign DOM elements to sinks that do not have inbuilt encoding . Refer: <a href=""https://aka.ms/tmtinputval#inbuilt-encode"">https://aka.ms/tmtinputval#inbuilt-encode</a>",Implementation
98,An attacker steals messages off the network and replays them in order to steal a user's session,Tampering,Database request,Web request,High,Not Started,,An attacker steals messages off the network and replays them in order to steal a user's session,,Generated,,Implementation
99,An adversary can gain access to sensitive data by performing SQL injection through Web App,Tampering,Database request,Web request,High,Not Started,,"SQL injection is an attack in which malicious code is inserted into strings that are later passed to an instance of SQL Server for parsing and execution. The primary form of SQL injection consists of direct insertion of code into user-input variables that are concatenated with SQL commands and executed. A less direct attack injects malicious code into strings that are destined for storage in a table or as metadata. When the stored strings are subsequently concatenated into a dynamic SQL command, the malicious code is executed. ",,Generated,"Ensure that type-safe parameters are used in Web Application for data access. Refer: <a href=""https://aka.ms/tmtinputval#typesafe"">https://aka.ms/tmtinputval#typesafe</a>",Implementation
100,An adversary can gain access to sensitive data stored in Web App's config files,Tampering,Database request,Web request,High,Not Started,,"An adversary can gain access to the config files. and if sensitive data is stored in it, it would be compromised.",,Generated,"Encrypt sections of Web App's configuration files that contain sensitive data. Refer: <a href=""https://aka.ms/tmtdata#encrypt-data"">https://aka.ms/tmtdata#encrypt-data</a>",Implementation
101,An adversary can reverse weakly encrypted or hashed content,Information Disclosure,Database request,Web Request,High,Not Started,,An adversary can reverse weakly encrypted or hashed content,,Generated,"Do not expose security details in error messages. Refer: <a href=""https://aka.ms/tmtxmgmt#messages"">https://aka.ms/tmtxmgmt#messages</a> Implement Default error handling page. Refer: <a href=""https://aka.ms/tmtxmgmt#default"">https://aka.ms/tmtxmgmt#default</a>  Set Deployment Method to Retail in IIS. Refer: <a href=""https://aka.ms/tmtxmgmt#deployment"">https://aka.ms/tmtxmgmt#deployment</a>  Use only approved symmetric block ciphers and key lengths. Refer: <a href=""https://aka.ms/tmtcrypto#cipher-length"">https://aka.ms/tmtcrypto#cipher-length</a>  Use approved block cipher modes and initialization vectors for symmetric ciphers. Refer: <a href=""https://aka.ms/tmtcrypto#vector-ciphers"">https://aka.ms/tmtcrypto#vector-ciphers</a>  Use approved asymmetric algorithms, key lengths, and padding. Refer: <a href=""https://aka.ms/tmtcrypto#padding"">https://aka.ms/tmtcrypto#padding</a>  Use approved random number generators. Refer: <a href=""https://aka.ms/tmtcrypto#numgen"">https://aka.ms/tmtcrypto#numgen</a>  Do not use symmetric stream ciphers. Refer: <a href=""https://aka.ms/tmtcrypto#stream-ciphers"">https://aka.ms/tmtcrypto#stream-ciphers</a>  Use approved MAC/HMAC/keyed hash algorithms. Refer: <a href=""https://aka.ms/tmtcrypto#mac-hash"">https://aka.ms/tmtcrypto#mac-hash</a>  Use only approved cryptographic hash functions. Refer: <a href=""https://aka.ms/tmtcrypto#hash-functions"">https://aka.ms/tmtcrypto#hash-functions</a>  Verify X.509 certificates used to authenticate SSL, TLS, and DTLS connections. Refer: <a href=""https://aka.ms/tmtcommsec#x509-ssltls"">https://aka.ms/tmtcommsec#x509-ssltls</a>",Implementation
102,An adversary may gain access to sensitive data from log files,Information Disclosure,Database request,Web Request,High,Not Started,,An adversary may gain access to sensitive data from log files,,Generated,"Ensure that the application does not log sensitive user data. Refer: <a href=""https://aka.ms/tmtauditlog#log-sensitive-data"">https://aka.ms/tmtauditlog#log-sensitive-data</a>  Ensure that Audit and Log Files have Restricted Access. Refer: <a href=""https://aka.ms/tmtauditlog#log-restricted-access"">https://aka.ms/tmtauditlog#log-restricted-access</a>",Implementation
103,An adversary can gain access to sensitive information through error messages,Information Disclosure,Database request,Web Request,High,Not Started,,"An adversary can gain access to sensitive data such as the following, through verbose error messages - Server names  - Connection strings  - Usernames  - Passwords  - SQL procedures  - Details of dynamic SQL failures  - Stack trace and lines of code  - Variables stored in memory  - Drive and folder locations  - Application install points  - Host configuration settings  - Other internal application details ",,Generated,"Do not expose security details in error messages. Refer: <a href=""https://aka.ms/tmtxmgmt#messages"">https://aka.ms/tmtxmgmt#messages</a>  Implement Default error handling page. Refer: <a href=""https://aka.ms/tmtxmgmt#default"">https://aka.ms/tmtxmgmt#default</a>  Set Deployment Method to Retail in IIS. Refer: <a href=""https://aka.ms/tmtxmgmt#deployment"">https://aka.ms/tmtxmgmt#deployment</a>  Exceptions should fail safely. Refer: <a href=""https://aka.ms/tmtxmgmt#fail"">https://aka.ms/tmtxmgmt#fail</a>  ASP.NET applications must disable tracing and debugging prior to deployment. Refer: <a href=""https://aka.ms/tmtconfigmgmt#trace-deploy"">https://aka.ms/tmtconfigmgmt#trace-deploy</a>  Implement controls to prevent username enumeration. Refer: <a href=""https://aka.ms/tmtauthn#controls-username-enum"">https://aka.ms/tmtauthn#controls-username-enum</a>",Implementation
104,Attacker can deny the malicious act and remove the attack foot prints leading to repudiation issues,Repudiation,Database request,Web Request,Medium,Not Started,,"Proper logging of all security events and user actions builds traceability in a system and denies any possible repudiation issues. In the absence of proper auditing and logging controls, it would become impossible to implement any accountability in a system",,Generated,"Ensure that auditing and logging is enforced on the application. Refer: <a href=""https://aka.ms/tmtauditlog#auditing"">https://aka.ms/tmtauditlog#auditing</a>  Ensure that log rotation and separation are in place. Refer: <a href=""https://aka.ms/tmtauditlog#log-rotation"">https://aka.ms/tmtauditlog#log-rotation</a>  Ensure that Audit and Log Files have Restricted Access. Refer: <a href=""https://aka.ms/tmtauditlog#log-restricted-access"">https://aka.ms/tmtauditlog#log-restricted-access</a>  Ensure that User Management Events are Logged. Refer: <a href=""https://aka.ms/tmtauditlog#user-management"">https://aka.ms/tmtauditlog#user-management</a>",Implementation
105,An adversary can spoof the target web application due to insecure TLS certificate configuration,Spoofing,Database request,Web Request,High,Not Started,,Ensure that TLS certificate parameters are configured with correct values,,Generated,"Verify X.509 certificates used to authenticate SSL, TLS, and DTLS connections. Refer: <a href=""https://aka.ms/tmtcommsec#x509-ssltls"">https://aka.ms/tmtcommsec#x509-ssltls</a>",Implementation
106,An adversary can steal sensitive data like user credentials,Spoofing,Database request,Web Request,High,Not Started,,"Attackers can exploit weaknesses in system to steal user credentials. Downstream and upstream components are often accessed by using credentials stored in configuration stores. Attackers may steal the upstream or downstream component credentials. Attackers may steal credentials if, Credentials are stored and sent in clear text, Weak input validation coupled with dynamic sql queries, Password retrieval mechanism are poor,  ",,Generated,"Explicitly disable the autocomplete HTML attribute in sensitive forms and inputs. Refer: <a href=""https://aka.ms/tmtdata#autocomplete-input"">https://aka.ms/tmtdata#autocomplete-input</a>  Perform input validation and filtering on all string type Model properties. Refer: <a href=""https://aka.ms/tmtinputval#typemodel"">https://aka.ms/tmtinputval#typemodel</a>  Validate all redirects within the application are closed or done safely. Refer: <a href=""https://aka.ms/tmtinputval#redirect-safe"">https://aka.ms/tmtinputval#redirect-safe</a>  Enable step up or adaptive authentication. Refer: <a href=""https://aka.ms/tmtauthn#step-up-adaptive-authn"">https://aka.ms/tmtauthn#step-up-adaptive-authn</a>  Implement forgot password functionalities securely. Refer: <a href=""https://aka.ms/tmtauthn#forgot-pword-fxn"">https://aka.ms/tmtauthn#forgot-pword-fxn</a>  Ensure that password and account policy are implemented. Refer: <a href=""https://aka.ms/tmtauthn#pword-account-policy"">https://aka.ms/tmtauthn#pword-account-policy</a>  Implement input validation on all string type parameters accepted by Controller methods. Refer: <a href=""https://aka.ms/tmtinputval#string-method"">https://aka.ms/tmtinputval#string-method</a>",Implementation
107,An adversary can create a fake website and launch phishing attacks,Spoofing,Database request,Web Request,High,Not Started,,"Phishing is attempted to obtain sensitive information such as usernames, passwords, and credit card details (and sometimes, indirectly, money), often for malicious reasons, by masquerading as a Web Server which is a trustworthy entity in electronic communication",,Generated,"Verify X.509 certificates used to authenticate SSL, TLS, and DTLS connections. Refer: <a href=""https://aka.ms/tmtcommsec#x509-ssltls"">https://aka.ms/tmtcommsec#x509-ssltls</a>  Ensure that authenticated ASP.NET pages incorporate UI Redressing or clickjacking defences. Refer: <a href=""https://aka.ms/tmtconfigmgmt#ui-defenses"">https://aka.ms/tmtconfigmgmt#ui-defenses</a>  Validate all redirects within the application are closed or done safely. Refer: <a href=""https://aka.ms/tmtinputval#redirect-safe"">https://aka.ms/tmtinputval#redirect-safe</a>",Implementation
108,An adversary may spoof Airflow worker (recommender) and gain access to Web Application,Spoofing,Database request,Web Request,High,Not Started,,"If proper authentication is not in place, an adversary can spoof a source process or external entity and gain unauthorized access to the Web Application",,Generated,"Consider using a standard authentication mechanism to authenticate to Web Application. Refer: <a href=""https://aka.ms/tmtauthn#standard-authn-web-app"">https://aka.ms/tmtauthn#standard-authn-web-app</a>",Design
109,An adversary can gain access to sensitive data by performing SQL injection through Web App,Tampering,Database request,Web Request,High,Not Started,,"SQL injection is an attack in which malicious code is inserted into strings that are later passed to an instance of SQL Server for parsing and execution. The primary form of SQL injection consists of direct insertion of code into user-input variables that are concatenated with SQL commands and executed. A less direct attack injects malicious code into strings that are destined for storage in a table or as metadata. When the stored strings are subsequently concatenated into a dynamic SQL command, the malicious code is executed. ",,Generated,"Ensure that type-safe parameters are used in Web Application for data access. Refer: <a href=""https://aka.ms/tmtinputval#typesafe"">https://aka.ms/tmtinputval#typesafe</a>",Implementation
110,An adversary can gain access to sensitive data stored in Web App's config files,Tampering,Database request,Web Request,High,Not Started,,"An adversary can gain access to the config files. and if sensitive data is stored in it, it would be compromised.",,Generated,"Encrypt sections of Web App's configuration files that contain sensitive data. Refer: <a href=""https://aka.ms/tmtdata#encrypt-data"">https://aka.ms/tmtdata#encrypt-data</a>",Implementation
118,An adversary may abuse weak Database configuration,Elevation of Privileges,Database request,Generic Data Flow,High,Not Started,,An adversary may abuse weak Database configuration.,,Generated,"Enable SQL Vulnerability Assessment to gain visibility into the security posture of your Azure SQL Database instances. Acting on the assessment results help reduce attack surface and enhance your database security. Refer: <a href=""https://aka.ms/tmt-th149"">https://aka.ms/tmt-th149</a>",Implementation
117,"An adversary can gain long term, persistent access to an Azure SQL DB instance through the compromise of local user account password(s)",Elevation of Privileges,Database request,Generic Data Flow,High,Not Started,,"An adversary can gain long term, persistent access to an Azure SQL DB instance through the compromise of local user account password(s).",,Generated,"It is recommended to rotate user account passwords (e.g. those used in connection strings) regularly, in accordance with your organization's policies. Store secrets in a secret storage solution (e.g. Azure Key Vault).",Implementation
116,An adversary can deny actions performed on Database due to a lack of auditing,Repudiation,Database request,Generic Data Flow,Medium,Not Started,,An adversary can deny actions performed on Database due to a lack of auditing.,,Generated,"Enable auditing on Azure SQL Database instances to track and log database events. After configuring and customizing the audited events, enable threat detection to receive alerts on anomalous database activities indicating potential security threats. Refer: <a href=""https://aka.ms/tmt-th147"">https://aka.ms/tmt-th147</a>",Design
115,A compromised identity may permit more privileges than intended to an adversary due to weak permission and role assignments,Elevation of Privileges,Database request,Generic Data Flow,High,Not Started,,A compromised identity may permit more privileges than intended to an adversary due to weak permission and role assignments.,,Generated,"It is recommended to review permission and role assignments to ensure the users are granted the least privileges necessary. Refer: <a href=""https://aka.ms/tmt-th146"">https://aka.ms/tmt-th146</a>",Implementation
114,An adversary having access to the storage container (e.g. physical access to the storage media) may be able to read sensitive data,Information Disclosure,Database request,Generic Data Flow,High,Not Started,,An adversary having access to the storage container (e.g. physical access to the storage media) may be able to read sensitive data.,,Generated,"Enable Transparent Data Encryption (TDE) on Azure SQL Database instances to have data encrypted at rest. Refer:<a href=""https://aka.ms/tmt-th145a"">https://aka.ms/tmt-th145a</a>. Use the Always Encrypted feature to allow client applications to encrypt sensitive data before it is sent to the Azure SQL Database. Refer: <a href=""https://aka.ms/tmt-th145b"">https://aka.ms/tmt-th145b</a> ",Implementation
113,An adversary can read confidential data due to weak connection string configuration,Information Disclosure,Database request,Generic Data Flow,High,Not Started,,An adversary can read confidential data due to weak connection string configuration.,,Generated,"Clients connecting to an Azure SQL Database instance using a connection string should ensure encrypt=true and trustservercertificate=false are set. This configuration ensures that connections are encrypted only if there is a verifiable server certificate (otherwise the connection attempt fails). This helps protect against Man-In-The-Middle attacks. Refer: <a href=""https://aka.ms/tmt-th144"">https://aka.ms/tmt-th144</a>",Implementation
112,An adversary can gain unauthorized access to Azure SQL DB instances due to weak network security configuration.,Elevation of Privileges,Database request,Generic Data Flow,High,Not Started,,An adversary can gain unauthorized access to Azure SQL DB instances due to weak network security configuration.,,Generated,"Restrict access to Azure SQL Database instances by configuring server-level and database-level firewall rules to permit connections from selected networks (e.g. a virtual network or a custom set of IP addresses) where possible. Refer:<a href=""https://aka.ms/tmt-th143"">https://aka.ms/tmt-th143</a>",Implementation
111,An adversary can gain unauthorized access to Azure SQL database due to weak account policy,Elevation of Privileges,Database request,Generic Data Flow,High,Not Started,,"Due to poorly configured account policies, adversary can launch brute force attacks on Database ",,Generated,"When possible use Azure Active Directory Authentication for connecting to SQL Database. Refer: <a href=""https://aka.ms/tmt-th10a"">https://aka.ms/tmt-th10a</a> Ensure that least-privileged accounts are used to connect to Database server. Refer: <a href=""https://aka.ms/tmt-th10b"">https://aka.ms/tmt-th10b</a> and <a href=""https://aka.ms/tmt-th10c"">https://aka.ms/tmt-th10c</a>",Implementation
126,An adversary may abuse weak Database configuration,Elevation of Privileges,Database request,Database request,High,Not Started,,An adversary may abuse weak Database configuration.,,Generated,"Enable SQL Vulnerability Assessment to gain visibility into the security posture of your Azure SQL Database instances. Acting on the assessment results help reduce attack surface and enhance your database security. Refer: <a href=""https://aka.ms/tmt-th149"">https://aka.ms/tmt-th149</a>",Implementation
125,"An adversary can gain long term, persistent access to an Azure SQL DB instance through the compromise of local user account password(s)",Elevation of Privileges,Database request,Database request,High,Not Started,,"An adversary can gain long term, persistent access to an Azure SQL DB instance through the compromise of local user account password(s).",,Generated,"It is recommended to rotate user account passwords (e.g. those used in connection strings) regularly, in accordance with your organization's policies. Store secrets in a secret storage solution (e.g. Azure Key Vault).",Implementation
124,An adversary can deny actions performed on Database due to a lack of auditing,Repudiation,Database request,Database request,Medium,Not Started,,An adversary can deny actions performed on Database due to a lack of auditing.,,Generated,"Enable auditing on Azure SQL Database instances to track and log database events. After configuring and customizing the audited events, enable threat detection to receive alerts on anomalous database activities indicating potential security threats. Refer: <a href=""https://aka.ms/tmt-th147"">https://aka.ms/tmt-th147</a>",Design
123,A compromised identity may permit more privileges than intended to an adversary due to weak permission and role assignments,Elevation of Privileges,Database request,Database request,High,Not Started,,A compromised identity may permit more privileges than intended to an adversary due to weak permission and role assignments.,,Generated,"It is recommended to review permission and role assignments to ensure the users are granted the least privileges necessary. Refer: <a href=""https://aka.ms/tmt-th146"">https://aka.ms/tmt-th146</a>",Implementation
122,An adversary having access to the storage container (e.g. physical access to the storage media) may be able to read sensitive data,Information Disclosure,Database request,Database request,High,Not Started,,An adversary having access to the storage container (e.g. physical access to the storage media) may be able to read sensitive data.,,Generated,"Enable Transparent Data Encryption (TDE) on Azure SQL Database instances to have data encrypted at rest. Refer:<a href=""https://aka.ms/tmt-th145a"">https://aka.ms/tmt-th145a</a>. Use the Always Encrypted feature to allow client applications to encrypt sensitive data before it is sent to the Azure SQL Database. Refer: <a href=""https://aka.ms/tmt-th145b"">https://aka.ms/tmt-th145b</a> ",Implementation
121,An adversary can read confidential data due to weak connection string configuration,Information Disclosure,Database request,Database request,High,Not Started,,An adversary can read confidential data due to weak connection string configuration.,,Generated,"Clients connecting to an Azure SQL Database instance using a connection string should ensure encrypt=true and trustservercertificate=false are set. This configuration ensures that connections are encrypted only if there is a verifiable server certificate (otherwise the connection attempt fails). This helps protect against Man-In-The-Middle attacks. Refer: <a href=""https://aka.ms/tmt-th144"">https://aka.ms/tmt-th144</a>",Implementation
120,An adversary can gain unauthorized access to Azure SQL DB instances due to weak network security configuration.,Elevation of Privileges,Database request,Database request,High,Not Started,,An adversary can gain unauthorized access to Azure SQL DB instances due to weak network security configuration.,,Generated,"Restrict access to Azure SQL Database instances by configuring server-level and database-level firewall rules to permit connections from selected networks (e.g. a virtual network or a custom set of IP addresses) where possible. Refer:<a href=""https://aka.ms/tmt-th143"">https://aka.ms/tmt-th143</a>",Implementation
119,An adversary can gain unauthorized access to Azure SQL database due to weak account policy,Elevation of Privileges,Database request,Database request,High,Not Started,,"Due to poorly configured account policies, adversary can launch brute force attacks on Database ",,Generated,"When possible use Azure Active Directory Authentication for connecting to SQL Database. Refer: <a href=""https://aka.ms/tmt-th10a"">https://aka.ms/tmt-th10a</a> Ensure that least-privileged accounts are used to connect to Database server. Refer: <a href=""https://aka.ms/tmt-th10b"">https://aka.ms/tmt-th10b</a> and <a href=""https://aka.ms/tmt-th10c"">https://aka.ms/tmt-th10c</a>",Implementation
130,Attacker can deny the malicious act and remove the attack foot prints leading to repudiation issues,Repudiation,Database request,Database response,Medium,Not Started,,"Proper logging of all security events and user actions builds traceability in a system and denies any possible repudiation issues. In the absence of proper auditing and logging controls, it would become impossible to implement any accountability in a system",,Generated,"Ensure that auditing and logging is enforced on the application. Refer: <a href=""https://aka.ms/tmtauditlog#auditing"">https://aka.ms/tmtauditlog#auditing</a>  Ensure that log rotation and separation are in place. Refer: <a href=""https://aka.ms/tmtauditlog#log-rotation"">https://aka.ms/tmtauditlog#log-rotation</a>  Ensure that Audit and Log Files have Restricted Access. Refer: <a href=""https://aka.ms/tmtauditlog#log-restricted-access"">https://aka.ms/tmtauditlog#log-restricted-access</a>  Ensure that User Management Events are Logged. Refer: <a href=""https://aka.ms/tmtauditlog#user-management"">https://aka.ms/tmtauditlog#user-management</a>",Implementation
129,An adversary can gain access to sensitive information through error messages,Information Disclosure,Database request,Database response,High,Not Started,,"An adversary can gain access to sensitive data such as the following, through verbose error messages - Server names  - Connection strings  - Usernames  - Passwords  - SQL procedures  - Details of dynamic SQL failures  - Stack trace and lines of code  - Variables stored in memory  - Drive and folder locations  - Application install points  - Host configuration settings  - Other internal application details ",,Generated,"Do not expose security details in error messages. Refer: <a href=""https://aka.ms/tmtxmgmt#messages"">https://aka.ms/tmtxmgmt#messages</a>  Implement Default error handling page. Refer: <a href=""https://aka.ms/tmtxmgmt#default"">https://aka.ms/tmtxmgmt#default</a>  Set Deployment Method to Retail in IIS. Refer: <a href=""https://aka.ms/tmtxmgmt#deployment"">https://aka.ms/tmtxmgmt#deployment</a>  Exceptions should fail safely. Refer: <a href=""https://aka.ms/tmtxmgmt#fail"">https://aka.ms/tmtxmgmt#fail</a>  ASP.NET applications must disable tracing and debugging prior to deployment. Refer: <a href=""https://aka.ms/tmtconfigmgmt#trace-deploy"">https://aka.ms/tmtconfigmgmt#trace-deploy</a>  Implement controls to prevent username enumeration. Refer: <a href=""https://aka.ms/tmtauthn#controls-username-enum"">https://aka.ms/tmtauthn#controls-username-enum</a>",Implementation
128,An adversary may gain access to sensitive data from log files,Information Disclosure,Database request,Database response,High,Not Started,,An adversary may gain access to sensitive data from log files,,Generated,"Ensure that the application does not log sensitive user data. Refer: <a href=""https://aka.ms/tmtauditlog#log-sensitive-data"">https://aka.ms/tmtauditlog#log-sensitive-data</a>  Ensure that Audit and Log Files have Restricted Access. Refer: <a href=""https://aka.ms/tmtauditlog#log-restricted-access"">https://aka.ms/tmtauditlog#log-restricted-access</a>",Implementation
127,An adversary can reverse weakly encrypted or hashed content,Information Disclosure,Database request,Database response,High,Not Started,,An adversary can reverse weakly encrypted or hashed content,,Generated,"Do not expose security details in error messages. Refer: <a href=""https://aka.ms/tmtxmgmt#messages"">https://aka.ms/tmtxmgmt#messages</a> Implement Default error handling page. Refer: <a href=""https://aka.ms/tmtxmgmt#default"">https://aka.ms/tmtxmgmt#default</a>  Set Deployment Method to Retail in IIS. Refer: <a href=""https://aka.ms/tmtxmgmt#deployment"">https://aka.ms/tmtxmgmt#deployment</a>  Use only approved symmetric block ciphers and key lengths. Refer: <a href=""https://aka.ms/tmtcrypto#cipher-length"">https://aka.ms/tmtcrypto#cipher-length</a>  Use approved block cipher modes and initialization vectors for symmetric ciphers. Refer: <a href=""https://aka.ms/tmtcrypto#vector-ciphers"">https://aka.ms/tmtcrypto#vector-ciphers</a>  Use approved asymmetric algorithms, key lengths, and padding. Refer: <a href=""https://aka.ms/tmtcrypto#padding"">https://aka.ms/tmtcrypto#padding</a>  Use approved random number generators. Refer: <a href=""https://aka.ms/tmtcrypto#numgen"">https://aka.ms/tmtcrypto#numgen</a>  Do not use symmetric stream ciphers. Refer: <a href=""https://aka.ms/tmtcrypto#stream-ciphers"">https://aka.ms/tmtcrypto#stream-ciphers</a>  Use approved MAC/HMAC/keyed hash algorithms. Refer: <a href=""https://aka.ms/tmtcrypto#mac-hash"">https://aka.ms/tmtcrypto#mac-hash</a>  Use only approved cryptographic hash functions. Refer: <a href=""https://aka.ms/tmtcrypto#hash-functions"">https://aka.ms/tmtcrypto#hash-functions</a>  Verify X.509 certificates used to authenticate SSL, TLS, and DTLS connections. Refer: <a href=""https://aka.ms/tmtcommsec#x509-ssltls"">https://aka.ms/tmtcommsec#x509-ssltls</a>",Implementation
131,An adversary can spoof the target web application due to insecure TLS certificate configuration,Spoofing,Database request,Database response,High,Not Started,,Ensure that TLS certificate parameters are configured with correct values,,Generated,"Verify X.509 certificates used to authenticate SSL, TLS, and DTLS connections. Refer: <a href=""https://aka.ms/tmtcommsec#x509-ssltls"">https://aka.ms/tmtcommsec#x509-ssltls</a>",Implementation
132,An adversary can steal sensitive data like user credentials,Spoofing,Database request,Database response,High,Not Started,,"Attackers can exploit weaknesses in system to steal user credentials. Downstream and upstream components are often accessed by using credentials stored in configuration stores. Attackers may steal the upstream or downstream component credentials. Attackers may steal credentials if, Credentials are stored and sent in clear text, Weak input validation coupled with dynamic sql queries, Password retrieval mechanism are poor,  ",,Generated,"Explicitly disable the autocomplete HTML attribute in sensitive forms and inputs. Refer: <a href=""https://aka.ms/tmtdata#autocomplete-input"">https://aka.ms/tmtdata#autocomplete-input</a>  Perform input validation and filtering on all string type Model properties. Refer: <a href=""https://aka.ms/tmtinputval#typemodel"">https://aka.ms/tmtinputval#typemodel</a>  Validate all redirects within the application are closed or done safely. Refer: <a href=""https://aka.ms/tmtinputval#redirect-safe"">https://aka.ms/tmtinputval#redirect-safe</a>  Enable step up or adaptive authentication. Refer: <a href=""https://aka.ms/tmtauthn#step-up-adaptive-authn"">https://aka.ms/tmtauthn#step-up-adaptive-authn</a>  Implement forgot password functionalities securely. Refer: <a href=""https://aka.ms/tmtauthn#forgot-pword-fxn"">https://aka.ms/tmtauthn#forgot-pword-fxn</a>  Ensure that password and account policy are implemented. Refer: <a href=""https://aka.ms/tmtauthn#pword-account-policy"">https://aka.ms/tmtauthn#pword-account-policy</a>  Implement input validation on all string type parameters accepted by Controller methods. Refer: <a href=""https://aka.ms/tmtinputval#string-method"">https://aka.ms/tmtinputval#string-method</a>",Implementation
133,An adversary can create a fake website and launch phishing attacks,Spoofing,Database request,Database response,High,Not Started,,"Phishing is attempted to obtain sensitive information such as usernames, passwords, and credit card details (and sometimes, indirectly, money), often for malicious reasons, by masquerading as a Web Server which is a trustworthy entity in electronic communication",,Generated,"Verify X.509 certificates used to authenticate SSL, TLS, and DTLS connections. Refer: <a href=""https://aka.ms/tmtcommsec#x509-ssltls"">https://aka.ms/tmtcommsec#x509-ssltls</a>  Ensure that authenticated ASP.NET pages incorporate UI Redressing or clickjacking defences. Refer: <a href=""https://aka.ms/tmtconfigmgmt#ui-defenses"">https://aka.ms/tmtconfigmgmt#ui-defenses</a>  Validate all redirects within the application are closed or done safely. Refer: <a href=""https://aka.ms/tmtinputval#redirect-safe"">https://aka.ms/tmtinputval#redirect-safe</a>",Implementation
134,An adversary may spoof Database and gain access to Web Application,Spoofing,Database request,Database response,High,Not Started,,"If proper authentication is not in place, an adversary can spoof a source process or external entity and gain unauthorized access to the Web Application",,Generated,"Consider using a standard authentication mechanism to authenticate to Web Application. Refer: <a href=""https://aka.ms/tmtauthn#standard-authn-web-app"">https://aka.ms/tmtauthn#standard-authn-web-app</a>",Design
135,An adversary can gain access to sensitive data by performing SQL injection through Web App,Tampering,Database request,Database response,High,Not Started,,"SQL injection is an attack in which malicious code is inserted into strings that are later passed to an instance of SQL Server for parsing and execution. The primary form of SQL injection consists of direct insertion of code into user-input variables that are concatenated with SQL commands and executed. A less direct attack injects malicious code into strings that are destined for storage in a table or as metadata. When the stored strings are subsequently concatenated into a dynamic SQL command, the malicious code is executed. ",,Generated,"Ensure that type-safe parameters are used in Web Application for data access. Refer: <a href=""https://aka.ms/tmtinputval#typesafe"">https://aka.ms/tmtinputval#typesafe</a>",Implementation
136,An adversary can gain access to sensitive data stored in Web App's config files,Tampering,Database request,Database response,High,Not Started,,"An adversary can gain access to the config files. and if sensitive data is stored in it, it would be compromised.",,Generated,"Encrypt sections of Web App's configuration files that contain sensitive data. Refer: <a href=""https://aka.ms/tmtdata#encrypt-data"">https://aka.ms/tmtdata#encrypt-data</a>",Implementation
